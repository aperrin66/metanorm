---
language: python
python: '3.7'
services: docker
if: 'type = push'

# Environment variables defined as part of the Travis CI repository configuration are:
# - DOCKER_ORG: the docker hub organization (or user) to which the image will be pushed
# - DOCKER_USER: the docker hub user used to log in to the docker hub
# - DOCKER_PASS: the password of this user
# - GITHUB_API_TOKEN: Github API key for the nerscci user

env:
  global:
    - TESTING_IMAGE_NAME="${DOCKER_ORG}/metanorm_tests"

install:
  - docker pull "${TESTING_IMAGE_NAME}" || true
  - >
    docker build ./docker
    -f ./docker/Dockerfile_tests
    --cache-from "${TESTING_IMAGE_NAME}"
    -t "${TESTING_IMAGE_NAME}"

script:
  - >
    docker run --rm
    -v "$(pwd):/src"
    -e "COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN"
    -e "TRAVIS=true"
    -e "TRAVIS_JOB_ID=$TRAVIS_JOB_ID"
    -e "TRAVIS_BRANCH=$TRAVIS_BRANCH"
    -e "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST"
    "${TESTING_IMAGE_NAME}"
    bash -c "python -c 'import pythesint;pythesint.update_all_vocabularies()' &&
      coverage run --source=./metanorm -m unittest discover tests && coveralls"

after_success:
  - docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
  - docker push "${TESTING_IMAGE_NAME}"

# If the build is triggered by a tag and an API token is defined for the branch
# (in the travis repository settings), a package is built and added to the release
before_deploy:
  - docker run --rm -v "$(pwd):/src" "${TESTING_IMAGE_NAME}" python setup.py sdist bdist_wheel
deploy:
  on:
    tags: true
    condition: -n "${GITHUB_API_TOKEN}"
  provider: releases
  api_key: "${GITHUB_API_TOKEN}"
  file: 'dist/*'
  file_glob: true
  skip_cleanup: true
...